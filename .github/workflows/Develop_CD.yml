name: Develop_CD

on:

  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml        
          echo "${{ secrets.ENV_PROPERTIES_DEPLOY }}" >> ./application.yml

        shell: bash

      - name: Build with Gradle
        run: ./gradlew bootJar

      ## 도커 이미지 빌드 후 도커허브에 push하기
      - name: web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}

      ## 서버에 접속하여 도커 이미지를 pull 받고 실행하기
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker stop prod-server
            docker rm -f $(docker ps -qa)
            docker rmi ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
            docker pull ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
            docker-compose up -d
#          sudo docker rm prod-server
#          sudo docker image rm ${{ secrets.DOCKER_REPO }}
#          sudo docker pull ${{ secrets.DOCKER_REPO }}
#          sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_REPO }}
